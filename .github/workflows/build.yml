name: Build

on:
  push:
    branches: [ "main", "develop", "release/**" ]
  pull_request:
    branches: [ "main", "develop" ]

permissions:
  contents: write

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.gitversion.outputs.semVer }}
      versionCode: ${{ steps.run_number.outputs.versionCode }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.6
        with:
          versionSpec: '5.x'
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.6
        with:
          useConfigFile: true
          configFilePath: ./gitversion.yml
      - name: Display SemVer
        run: |
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
  build:
    strategy:
      matrix:
        module: ["standardbutton"]
    needs:
      - version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: ${{ matrix.module }}:build
        env:
          ORG_GRADLE_PROJECT_version: ${{ needs.version.outputs.version }}
      - name: Rename AAR
        run: mv ./${{ matrix.module }}/build/outputs/aar/${{ matrix.module }}-${{ needs.version.outputs.version }}.aar ./${{ matrix.module }}.aar
      - uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.module }}-aar
          path: ./${{ matrix.module }}.aar
  release:
    needs:
      - version
    if: github.event_name != 'pull_request'
    permissions:
      contents: write
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.version.outputs.version }}
          release_name: Release ${{ needs.version.outputs.version }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/main' }}
  upload-to-release:
    strategy:
      matrix:
        module: ["standardbutton"]
    needs:
      - version
      - release
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@master
        with:
          name: ${{ matrix.module }}-aar
          path: ./
      - name: upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./${{ matrix.module }}.aar
          asset_name: ${{ matrix.module }}-v${{ needs.version.outputs.version }}.aar
          asset_content_type: application/zip
  publish-sonatype:
    strategy:
      matrix:
        module: ["standardbutton"]
    needs:
      - version
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github
          settings-path: ${{ github.workspace }}
      - name: Publish to Sonatype
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: | 
            -Pversion=${{ needs.version.outputs.version }} 
            -Ppom.url="https://github.com/${{ github.repository }}" 
            -Ppom.scm.connection="scm:git:git://github.com/${{ github.repository }}" 
            -Ppom.scm.developerConnection="scm:git:ssh://github.com/${{ github.repository }}" 
            -Ppom.scm.url="https://github.com/${{ github.repository }}" 
            ${{ matrix.module }}:publishToCentralPortal --no-daemon
        env:
          ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.PGP_SECRET }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.PGP_PASSPHRASE }}